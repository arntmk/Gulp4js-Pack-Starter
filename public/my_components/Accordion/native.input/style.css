/* https://codepen.io/jgustavoas/pen/zYLNKbN */
/* ____________________________________________ */
@charset "UTF-8";

/* Add basic space everywhere (to container) */
div.flow-space > * + * {
	margin-top: var(--flow-space, 1em);
}

*,
*::before,
*::after {
	margin: 0;
}

img {
	vertical-align: middle;
}

body {
	height: 1000px;
	background-color: #34495e;
}

.container {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	margin: 150px auto;
	padding: 0 15px;
	width: 100%;
	max-width: 1200px;
}

/* ____________________________________________ */
/* ____________________________________________ */
/* ____________________________________________ */
/* Accordion */

/* This hides the summary's ::marker pseudo-element */
summary::-webkit-details-marker {
	display: none;
}

summary {
	display: block;
	list-style: none;
}

/* Hide the checkbox element */
input {
	display: none;
}

/* <label> element to check the checkbox */
label {
	display: flex;
	align-items: center;
	padding-left: 0.3125rem;
	height: 4.02rem; /* This height value must be equal to max-height value of <details> element */
}

/* ____________________________________________ */
/*
	The key is to start <details> element in the "open" state...
	 ...and animate its max-height value by toggling a checkbox.
*/
/* ____________________________________________ */
details {
	border: thin solid #8f8f9d;
	overflow: hidden; /* Hide the rest of the content */
	margin: 1rem 0;
	box-shadow: 0 2px 5px 0 rgb(0 0 0 / 25%);
	width: 100%;
	border-radius: 0.5rem;
	max-height: 4.08rem; /* Set a max-height value just enough to show the summary content */
	background-color: #fff;
	transition: max-height 0.5s ease-in-out;
	color: #111;
	background-color: #fff;
}

details .accordion-content {
	margin-top: 0;
	padding: 0 0.3125rem 0.3125rem 0.3125rem;
	text-align: center;
	background-color: #fff;
}

.accordion-border-top {
	border-top: 1px solid;
	border-image: linear-gradient(to right, transparent, #34495e, transparent) 1;
	padding: 1rem;
	line-height: 1.5rem;
}

/* ____________________________________________ */
/* ____________________________________________ */
/* Animation */
/*
	Here you can choose two approaches to animate <details> element:
   1) Use adjacent sibling combinator (+)
   2) Use :has() pseudo-class, but this might not work in Firefox.
*/
/* ____________________________________________ */
/* ____________________________________________ */
/* Animation Content */
details:has(input:checked) {
	max-height: 800px; /* Set a max-height value enough to show all the content */
}

/* ____________________________________________ */
/* Animation Icon */
label::before {
	content: "";
	width: 1.8em;
	height: 1.8em;
	background: transparent
		url("data:image/svg+xml;utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='4'%3E%3Cpath d='M4 0h6L7 4' style='fill:black;'/%3E%3C/svg%3E")
		no-repeat right center / 1.8em;
	transform: rotate(-90deg);
	transition: transform 0.4s ease-in-out;
}

details:has(input:checked) label::before {
	transform: rotate(0deg);
	transition: transform 0.4s ease-in-out;
}

/* ____________________________________________ */
/* ____________________________________________ */
/* ____________________________________________ */
/* input:checked + details, */
/* input:checked + details label::before, */
